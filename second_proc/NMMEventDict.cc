//
// File generated by rootcint at Wed Mar  4 23:46:38 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME NMMEventDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "NMMEventDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void NMMEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_NMMEvent(void *p = 0);
   static void *newArray_NMMEvent(Long_t size, void *p);
   static void delete_NMMEvent(void *p);
   static void deleteArray_NMMEvent(void *p);
   static void destruct_NMMEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::NMMEvent*)
   {
      ::NMMEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::NMMEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("NMMEvent", ::NMMEvent::Class_Version(), "./NMMEvent.hh", 12,
                  typeid(::NMMEvent), DefineBehavior(ptr, ptr),
                  &::NMMEvent::Dictionary, isa_proxy, 4,
                  sizeof(::NMMEvent) );
      instance.SetNew(&new_NMMEvent);
      instance.SetNewArray(&newArray_NMMEvent);
      instance.SetDelete(&delete_NMMEvent);
      instance.SetDeleteArray(&deleteArray_NMMEvent);
      instance.SetDestructor(&destruct_NMMEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::NMMEvent*)
   {
      return GenerateInitInstanceLocal((::NMMEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::NMMEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *NMMEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *NMMEvent::Class_Name()
{
   return "NMMEvent";
}

//______________________________________________________________________________
const char *NMMEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::NMMEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int NMMEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::NMMEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void NMMEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::NMMEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *NMMEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::NMMEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void NMMEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class NMMEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(NMMEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(NMMEvent::Class(),this);
   }
}

//______________________________________________________________________________
void NMMEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class NMMEvent.
      TClass *R__cl = ::NMMEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "N", &N);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pulseHeights", (void*)&pulseHeights);
      R__insp.InspectMember("vector<double>", (void*)&pulseHeights, "pulseHeights.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pulseTimes", (void*)&pulseTimes);
      R__insp.InspectMember("vector<double>", (void*)&pulseTimes, "pulseTimes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pulseTagV2", (void*)&pulseTagV2);
      R__insp.InspectMember("vector<string>", (void*)&pulseTagV2, "pulseTagV2.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "type", (void*)&type);
      R__insp.InspectMember("string", (void*)&type, "type.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "M", &M);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_NMMEvent(void *p) {
      return  p ? new(p) ::NMMEvent : new ::NMMEvent;
   }
   static void *newArray_NMMEvent(Long_t nElements, void *p) {
      return p ? new(p) ::NMMEvent[nElements] : new ::NMMEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_NMMEvent(void *p) {
      delete ((::NMMEvent*)p);
   }
   static void deleteArray_NMMEvent(void *p) {
      delete [] ((::NMMEvent*)p);
   }
   static void destruct_NMMEvent(void *p) {
      typedef ::NMMEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::NMMEvent

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

namespace ROOT {
   void vectorlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEstringgR_Dictionary();
   static void *new_vectorlEstringgR(void *p = 0);
   static void *newArray_vectorlEstringgR(Long_t size, void *p);
   static void delete_vectorlEstringgR(void *p);
   static void deleteArray_vectorlEstringgR(void *p);
   static void destruct_vectorlEstringgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<string>*)
   {
      vector<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<string>", -2, "prec_stl/vector", 49,
                  typeid(vector<string>), DefineBehavior(ptr, ptr),
                  0, &vectorlEstringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<string>) );
      instance.SetNew(&new_vectorlEstringgR);
      instance.SetNewArray(&newArray_vectorlEstringgR);
      instance.SetDelete(&delete_vectorlEstringgR);
      instance.SetDeleteArray(&deleteArray_vectorlEstringgR);
      instance.SetDestructor(&destruct_vectorlEstringgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEstringgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<string>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string> : new vector<string>;
   }
   static void *newArray_vectorlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string>[nElements] : new vector<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEstringgR(void *p) {
      delete ((vector<string>*)p);
   }
   static void deleteArray_vectorlEstringgR(void *p) {
      delete [] ((vector<string>*)p);
   }
   static void destruct_vectorlEstringgR(void *p) {
      typedef vector<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<string>

/********************************************************
* NMMEventDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableNMMEventDict();

extern "C" void G__set_cpp_environmentNMMEventDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("NMMEvent.hh");
  G__cpp_reset_tagtableNMMEventDict();
}
#include <new>
extern "C" int G__cpp_dllrevNMMEventDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* NMMEvent */
static int G__NMMEventDict_168_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   NMMEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new NMMEvent[n];
     } else {
       p = new((void*) gvp) NMMEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new NMMEvent;
     } else {
       p = new((void*) gvp) NMMEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__NMMEventDictLN_NMMEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NMMEventDict_168_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) NMMEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NMMEventDict_168_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) NMMEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NMMEventDict_168_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) NMMEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NMMEventDict_168_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      NMMEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NMMEventDict_168_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NMMEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NMMEventDict_168_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) NMMEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NMMEventDict_168_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) NMMEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NMMEventDict_168_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) NMMEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NMMEventDict_168_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) NMMEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__NMMEventDict_168_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   NMMEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new NMMEvent(*(NMMEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__NMMEventDictLN_NMMEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef NMMEvent G__TNMMEvent;
static int G__NMMEventDict_168_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (NMMEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((NMMEvent*) (soff+(sizeof(NMMEvent)*i)))->~G__TNMMEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (NMMEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((NMMEvent*) (soff))->~G__TNMMEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__NMMEventDict_168_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   NMMEvent* dest = (NMMEvent*) G__getstructoffset();
   *dest = *(NMMEvent*) libp->para[0].ref;
   const NMMEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* NMMEvent */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncNMMEventDict {
 public:
  G__Sizep2memfuncNMMEventDict(): p(&G__Sizep2memfuncNMMEventDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncNMMEventDict::*p)();
};

size_t G__get_sizep2memfuncNMMEventDict()
{
  G__Sizep2memfuncNMMEventDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceNMMEventDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__NMMEventDictLN_NMMEvent))) {
     NMMEvent *G__Lderived;
     G__Lderived=(NMMEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__NMMEventDictLN_NMMEvent),G__get_linked_tagnum(&G__NMMEventDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableNMMEventDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__NMMEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__NMMEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__NMMEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__NMMEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__NMMEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__NMMEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__NMMEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__NMMEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__NMMEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__NMMEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__NMMEventDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__NMMEventDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__NMMEventDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__NMMEventDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__NMMEventDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* NMMEvent */
static void G__setup_memvarNMMEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__NMMEventDictLN_NMMEvent));
   { NMMEvent *p; p=(NMMEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->N)-(long)(p)),105,0,0,-1,-1,-1,1,"N=",0,"Pulse Number = observable M");
   G__memvar_setup((void*)((long)(&p->pulseHeights)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__NMMEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"pulseHeights=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pulseTimes)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__NMMEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"pulseTimes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pulseTagV2)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__NMMEventDictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<string>"),-1,1,"pulseTagV2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->type)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__NMMEventDictLN_string),-1,-1,1,"type=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->M)-(long)(p)),105,0,0,-1,-1,-1,1,"M=",0,"MC True M");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__NMMEventDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarNMMEventDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncNMMEvent(void) {
   /* NMMEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__NMMEventDictLN_NMMEvent));
   G__memfunc_setup("NMMEvent",746,G__NMMEventDict_168_0_1, 105, G__get_linked_tagnum(&G__NMMEventDictLN_NMMEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__NMMEventDict_168_0_2, 85, G__get_linked_tagnum(&G__NMMEventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&NMMEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__NMMEventDict_168_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&NMMEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__NMMEventDict_168_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&NMMEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__NMMEventDict_168_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&NMMEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__NMMEventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__NMMEventDict_168_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__NMMEventDict_168_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&NMMEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__NMMEventDict_168_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&NMMEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__NMMEventDict_168_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&NMMEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__NMMEventDict_168_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&NMMEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("NMMEvent", 746, G__NMMEventDict_168_0_14, (int) ('i'), G__get_linked_tagnum(&G__NMMEventDictLN_NMMEvent), -1, 0, 1, 1, 1, 0, "u 'NMMEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~NMMEvent", 872, G__NMMEventDict_168_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__NMMEventDict_168_0_16, (int) ('u'), G__get_linked_tagnum(&G__NMMEventDictLN_NMMEvent), -1, 1, 1, 1, 1, 0, "u 'NMMEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncNMMEventDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalNMMEventDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcNMMEventDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__NMMEventDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__NMMEventDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__NMMEventDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__NMMEventDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__NMMEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__NMMEventDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__NMMEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__NMMEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__NMMEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__NMMEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__NMMEventDictLN_NMMEvent = { "NMMEvent" , 99 , -1 };
G__linked_taginfo G__NMMEventDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__NMMEventDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableNMMEventDict() {
  G__NMMEventDictLN_TClass.tagnum = -1 ;
  G__NMMEventDictLN_TBuffer.tagnum = -1 ;
  G__NMMEventDictLN_TMemberInspector.tagnum = -1 ;
  G__NMMEventDictLN_TObject.tagnum = -1 ;
  G__NMMEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__NMMEventDictLN_string.tagnum = -1 ;
  G__NMMEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__NMMEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__NMMEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__NMMEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__NMMEventDictLN_NMMEvent.tagnum = -1 ;
  G__NMMEventDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__NMMEventDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableNMMEventDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__NMMEventDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__NMMEventDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__NMMEventDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__NMMEventDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__NMMEventDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__NMMEventDictLN_string);
   G__get_linked_tagnum_fwd(&G__NMMEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__NMMEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__NMMEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__NMMEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__NMMEventDictLN_NMMEvent),sizeof(NMMEvent),-1,292096,(char*)NULL,G__setup_memvarNMMEvent,G__setup_memfuncNMMEvent);
   G__get_linked_tagnum_fwd(&G__NMMEventDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__NMMEventDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupNMMEventDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupNMMEventDict()");
  G__set_cpp_environmentNMMEventDict();
  G__cpp_setup_tagtableNMMEventDict();

  G__cpp_setup_inheritanceNMMEventDict();

  G__cpp_setup_typetableNMMEventDict();

  G__cpp_setup_memvarNMMEventDict();

  G__cpp_setup_memfuncNMMEventDict();
  G__cpp_setup_globalNMMEventDict();
  G__cpp_setup_funcNMMEventDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncNMMEventDict();
  return;
}
class G__cpp_setup_initNMMEventDict {
  public:
    G__cpp_setup_initNMMEventDict() { G__add_setup_func("NMMEventDict",(G__incsetup)(&G__cpp_setupNMMEventDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initNMMEventDict() { G__remove_setup_func("NMMEventDict"); }
};
G__cpp_setup_initNMMEventDict G__cpp_setup_initializerNMMEventDict;

