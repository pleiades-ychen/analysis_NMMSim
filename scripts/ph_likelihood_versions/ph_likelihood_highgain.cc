// for high-gain
#include <iostream>
#include "TMath.h"

double pdf_n(const double);
double pdf_g(const double);

double ph_likelihood(const vector<double> & ph, const string type) {

  double ll = 1.;

  if(type == "n") {
    for (int i = 0; i < ph.size(); i++)
      ll *= pdf_n(ph[i]);
  }
  else if(type == "g") {
    for (int i = 0; i < ph.size(); i++)
      ll *= pdf_g(ph[i]);
  }
  else
    std::cout << "Event type must be \"n\" or \"g\".\n";

  return ll;
}


double pdf_n(double Amp) {
  double val[300] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.000927436, 0.00457469, 0.0083602, 0.0106133, 0.0109698, 0.0122399, 0.0126982, 0.0131512, 0.0136847, 0.014603, 0.0145822, 0.0151752, 0.0156189, 0.015812, 0.0153703, 0.0155424, 0.015715, 0.0160199, 0.0157448, 0.0156863, 0.0157199, 0.015294, 0.0158116, 0.0153674, 0.015249, 0.0157607, 0.015303, 0.0155889, 0.0142383, 0.0151035, 0.0142575, 0.0143214, 0.014329, 0.0133933, 0.0133103, 0.014231, 0.0126915, 0.0131704, 0.0127528, 0.0125793, 0.0125667, 0.0123362, 0.011839, 0.0118709, 0.0120838, 0.0116461, 0.011429, 0.0112865, 0.0110752, 0.0106568, 0.0101219, 0.00989635, 0.0103466, 0.00987625, 0.00946453, 0.00967751, 0.00929851, 0.00946036, 0.00899667, 0.00825883, 0.00833345, 0.00873509, 0.00792596, 0.00793604, 0.00799641, 0.00789329, 0.00766606, 0.00751261, 0.00705482, 0.00695588, 0.00662469, 0.00682005, 0.00606712, 0.00602939, 0.00629351, 0.00596147, 0.00617192, 0.00556153, 0.0051381, 0.00478343, 0.0046543, 0.00446733, 0.00452016, 0.00432311, 0.00424765, 0.00396089, 0.00375045, 0.00353076, 0.00360707, 0.00330522, 0.00338823, 0.00277699, 0.00276021, 0.00271578, 0.00276944, 0.00273087, 0.00239968, 0.00242232, 0.00228649, 0.00216575, 0.00194691, 0.00182617, 0.00189409, 0.00187145, 0.00159224, 0.0015696, 0.00170543, 0.00139604, 0.00156876, 0.00133567, 0.00113108,0.00113947, 0.00128285, 0.00105646, 0.000943271, 0.000837625, 0.00090554, 0.000928179, 0.000844326, 0.000724432, 0.000769709, 0.000671609, 0.00061124, 0.000664063, 0.00055087, 0.000505593, 0.00051314, 0.000482955, 0.00045277, 0.000384855, 0.000445224, 0.000407493, 0.00035467, 0.000301847, 0.000331186, 0.000294301, 0.000233931, 0.00015847, 0.000218839, 0.000166016, 0.000249024, 0.000120739, 0.000181108, 0.00015847, 9.81002e-05, 0.000150923, 0.000120739, 0.000188654, 0.000135831, 9.81002e-05, 6.03694e-05, 3.77309e-05, 9.0554e-05, 5.28232e-05, 6.79155e-05, 0.000120739, 0.000105646, 6.79155e-05, 8.30079e-05, 3.77309e-05, 4.5277e-05, 3.77309e-05, 1.50923e-05, 6.79155e-05, 3.77309e-05, 3.01847e-05, 7.54617e-06, 2.26385e-05, 1.50923e-05, 1.50923e-05, 7.54617e-06, 2.26385e-05, 3.01847e-05, 3.01847e-05, 0, 2.26385e-05, 3.01847e-05, 2.26385e-05, 2.26385e-05, 1.50923e-05, 1.50923e-05, 7.54617e-06, 1.50923e-05, 7.54617e-06, 1.50923e-05, 7.54617e-06, 3.77309e-05, 0, 1.50923e-05, 0, 1.50923e-05, 2.26385e-05, 0, 0, 7.54617e-06, 7.54617e-06, 0, 0, 7.54617e-06, 0, 0, 7.54617e-06, 0, 0, 7.54617e-06, 7.54617e-06, 7.54617e-06, 0, 0, 0, 0, 7.54617e-06, 7.54617e-06, 0, 0, 7.54617e-06, 0, 7.54617e-06, 0, 0, 0, 7.54617e-06, 0, 0, 0, 0, 0, 0, 7.54617e-06, 0, 0, 0, 7.54617e-06,};
  int i = (int)TMath::Nint((Amp+1.)/2);
  return val[i];
}

double pdf_g(double Amp) {
  double val[300] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0112101, 0.0374629, 0.0523139, 0.0620868, 0.0601705, 0.0633324, 0.055859, 0.0524097, 0.0483856, 0.046086, 0.0433075, 0.0402415, 0.0378461, 0.0347801, 0.0318099, 0.0285523, 0.0295104, 0.0223244, 0.0227077, 0.0199291, 0.0195458, 0.0190668, 0.0142761, 0.0124557, 0.0147552, 0.0114976, 0.00948548, 0.0095813, 0.00785666, 0.0081441, 0.00823992, 0.00613203, 0.00526971, 0.00526971, 0.00526971, 0.00354508, 0.0044074, 0.00229951, 0.00344927, 0.00258695, 0.00229951, 0.00191626, 0.00182045, 0.00162882, 0.00143719, 0.00229951, 0.00124557, 0.00114976, 0.00114976, 0.00153301, 0.000574878, 0.000479065, 0.000766504, 0.000191626, 0.000670691, 0.000479065, 0.000670691, 0.000287439, 0.000670691, 0.000479065, 0.000574878, 0.000383252, 0.000574878, 0.000287439, 0.000287439, 0, 9.5813e-05, 0.000383252, 9.5813e-05, 0.000191626, 9.5813e-05, 0.000191626, 0, 0, 0, 0, 9.5813e-05, 0, 9.5813e-05, 9.5813e-05, 0.000191626, 0, 0, 9.5813e-05, 9.5813e-05, 9.5813e-05, 0, 9.5813e-05, 0, 0, 0, 0, 0.000191626, 9.5813e-05, 0, 9.5813e-05, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9.5813e-05, 0, 9.5813e-05, 0, 0, 0, 0, 0, 0, 0, 9.5813e-05, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9.5813e-05, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,};

  int i = (int)TMath::Nint((Amp+1.)/2);
  return val[i];
}
